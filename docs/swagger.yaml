basePath: /
definitions:
  models.Todo:
    properties:
      id:
        type: integer
      isDone:
        type: boolean
      label:
        type: string
    type: object
host: ybethoule-rest-api.endpoints.project-staging1.cloud.goog
info:
  contact:
    email: ybethoule@figarocms.fr
    name: Yohann Bethoule
    url: http://www.swagger.io/support
  description: Petit test pour le d√©veloppement d'une API en Go
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Devops Journey Go API
  version: "1.0"
paths:
  /api/v1/:
    get:
      description: Fetch all todos in the database
      operationId: fetch-all-todos
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Todo'
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Fetch all todos
    post:
      consumes:
      - application/json
      description: Create a todo with a label
      operationId: create-todo
      parameters:
      - description: Label of the task to do
        in: body
        name: label
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: Ok
          schema:
            type: string
        "400":
          description: Invalid request payload
          schema:
            type: string
        "404":
          description: Not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Create a todo
  /api/v1/{id}:
    delete:
      description: Delete a todo from its id
      operationId: delete-todo
      parameters:
      - description: Todo ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Delete a todo
    get:
      description: Fetch a todo from its id
      operationId: fetch-single-todo
      parameters:
      - description: todo ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Todo'
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Fetch a todo
    put:
      consumes:
      - application/json
      description: Update label and done status of a todo
      operationId: update-todo
      parameters:
      - description: Todo ID
        in: path
        name: id
        required: true
        type: integer
      - description: Todo label
        in: body
        name: label
        schema:
          type: string
      - description: True if the todo is done
        in: body
        name: isDone
        schema:
          type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Update a todo
swagger: "2.0"
